include libs/linux_x86/sys.corth
include libs/core/stack.corth
include libs/linux_x86/io.corth

// macro fputs arot 1 syscall3 drop endmacro

// macro file-desc int endmacro
// macro sizeof(int) 8 endmacro
macro sizeof(ptr) 8 endmacro


proc fputu
  // int: int file-desc: file-desc 
  int file-desc --
  // Prints an unsigned integer to a file stream.
in
  let file in
    memory buffer 20          in
    memory value  sizeof(int) in
    memory i      sizeof(ptr) in

      value !64
      buffer 19 + i !64

      while
        value @64 10 /%
        '0' + i @64 !8
        i @64 1 - i !64
        dup value !64 0 !=
      do end

      i @64 1 + buffer 19 + i @64 - file fputs
    end end end
  end
end


proc main
  int int -- int
in let argc argv in
  123 1 fputu 
end 0 end
