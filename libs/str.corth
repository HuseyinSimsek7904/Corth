include libs/core/stack.corth
include libs/core/memory.corth

macro str ptr int endmacro

macro str.get-len
  // ptr: ptr int: len -- int: len
  swp drop
endmacro

macro strc.get-len
  // ptr: ptr -- int: len
  dup while dup @8 isn-zero do inc end - neg
endmacro

macro str.to-strc
  // ptr: ptr int: len -- ptr: ptr
  drop
endmacro

macro strc.to-str
  // ptr: ptr -- ptr: ptr int: len
  dup strc.get-len
endmacro

macro str.copy
  // ptr: src int: len ptr: dst
  memcpy
endmacro

macro str.range
  // ptr: src int: len int: start int: end -- ptr: src' int: len'
  let _src_ _len_ _start_ _end_ in
    _src_ _start_ +
    _end_ _start_ -
  end
endmacro

/*
IT IS RECOMMENDED TO NOT USE THIS LIBRARY
THIS LIBRARY AND STRING TYPE REQUIRES A TON OF REWORK

There are two types of strings in Corth: char arrays and C-like strings.

char arrays:

  Stack:
    [cs] [cl]

  Memory:
    [c0] [c1] [c2] ... [c+cl]
     cs^

  cs points to the array pointer and right after it comes the length of the array.

C-like strings:

  Stack:
    [cs]

  Memory:
    [c0] [c1] [c2] ... [c+len] 00
     cs^

  cs points to the first char in the string and the last character is 0x00 (null-char).
*/
