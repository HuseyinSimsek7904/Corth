include libs/core.corth
include libs/memory.corth

macro str.get-len
    // ptr len -- len
    swp drop
endmacro

macro strc.get-len
    // ptr -- len

    0 while
        // (ptr+l) l
        swp dup load 0 !=
	// l (ptr+l)
    do
        inc swp
	// (ptr+l+1) l+1
    inc end drop
endmacro

macro str.to-strc
    // ptr len -- ptr
    drop
endmacro

macro strc.to-str
    // ptr -- ptr len
    dup strc.get-len
endmacro

macro str.copy
    // src len dst

    memcpy
endmacro

macro strc.copy
    // src dst
    
    set-memcpy.dst
    set-memcpy.src

    0 while
        dup get-memcpy.src get 0 !=
    do
        dup dup
        get-memcpy.dst swp
        get-memcpy.src get
        set

    inc end

    get-memcpy.dst 0 set
endmacro

/*
There are two types of strings in Corth: char arrays and C-like strings.

char arrays:

    Stack:
      [cs] [cl]

    Memory:
      [c0] [c1] [c2] ... [c+cl]
       cs^

    cs points to the array pointer and right after it comes the length of the array.

C-like strings:

    Stack:
      [cs]

    Memory:
      [c0] [c1] [c2] ... [c+len] 00
       cs^

    cs points to the first char in the string and the last character is 0x00 (null-char).
*/
