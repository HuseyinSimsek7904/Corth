include libs/math/fixed_point.corth
include libs/math/constants.corth

macro TRI-ITER 27 endmacro


proc sin-f
  // fixed: theta -- fixed: sin(theta)
  fixed -- fixed
in
  PI 2 * mod-ff
  
  let x in
    memory sum sizeof(fixed) and
           a   sizeof(fixed) and
           i   sizeof(int)   in

      a   x store8
      sum x store8

      3 while dup TRI-ITER < do
	i swp store8

	// a *= -x^2 / (i * (i - 1))
	a x sqr-f neg-f i load8 div-fi i load8 dec div-fi a load8 mul-ff store8

	// sum += a
	sum dup load8 a load8 add-ff store8

	i load8 inc inc
      end drop

      sum load8
    end
  end
end

proc cos-f
  // fixed: theta -- fixed: sin(theta)
  fixed -- fixed
in
  PI 2 * mod-ff
  
  let x in
    memory sum sizeof(fixed) and
    memory a   sizeof(fixed) and
    memory i   sizeof(int)   in

      a   0x0000000100000000 store8
      sum 0x0000000100000000 store8

      2 while dup TRI-ITER < do
	i swp store8

	// a *= -x^2 / (i * (i - 1))
	a x load8 sqr-f neg-f i load8 div-fi i load8 dec div-fi a load8 mul-ff store8

	// sum += a
	sum dup load8 a load8 add-ff store8

	i load8 inc inc
      end drop

      sum load8
    end
  end
end

macro tan-f
  // fixed: theta -- fixed: tan(theta)
  dup sin-f swp cos-f div-ff
endmacro

macro cot-f
  // fixed: theta -- fixed: cot(theta)
  dup cos-f swp sin-f div-ff
endmacro

macro sec-f
  // fixed: theta -- fixed: sec(theta)
  cos-f inv-f
endmacro

macro csc-f
  // fixed: theta -- fixed: csc(theta)
  sin-f inv-f
endmacro
