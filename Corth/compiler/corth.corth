include libs/linux_x86/stdio.corth
include libs/cstr.corth

macro malloc.ARRAY-SIZE       0x800000 endmacro
macro malloc.AVAIL-QUEUE-SIZE 0x100000 endmacro

include Corth/compiler/compiler.corth


macro EXIT-SUCCESS         0 endmacro
macro EXIT-INVALID-USAGE   1 endmacro
macro EXIT-NOT-IMPLEMENTED 2 endmacro
macro EXIT-UNKNOWN-ERROR   3 endmacro

// Usage information messages
macro use-info-basic
  "usage: corth <compile-nasm|compile|run> [args]\n" eputs
  EXIT-INVALID-USAGE exit drop
endmacro

macro use-info-compile-nasm
  "usage: corth compile-nasm <standard-library> <file> [<output>]\n" eputs
  EXIT-INVALID-USAGE exit drop
endmacro

macro use-info-compile
  "usage: corth compile <file> [<output>]\n" eputs
  EXIT-INVALID-USAGE exit drop
endmacro

macro use-info-compile-corth
  "usage: corth compile-corth\n" eputs
  EXIT-INVALID-USAGE exit drop
endmacro

macro use-info-run
  "usage: corth run <file> [<output>]\n" eputs
  EXIT-INVALID-USAGE exit drop
endmacro

macro use-info-quick-test
  "usage: corth quick-test\n" eputs
  EXIT-INVALID-USAGE exit drop
endmacro

macro not-implemented
  "not implemented yet\n" eputs
  EXIT-NOT-IMPLEMENTED exit drop
endmacro 


proc main
  int int -- int
in let argc argv in
  // Initialize malloc.
  malloc.init

  // Initialize debug.
  debug-init

  argc 2 < if
    use-info-basic
  end

  1 argv array64.get "compile-nasm" drop cstr.cmp is-zero if
    memory include-paths-set sizeof(ptr) in
      16 list64.init let dynamic in
        dynamic is-null if
          "malloc failed while creating include paths set.\n" eputs
          EXIT-UNKNOWN-ERROR return
        end
        
        dynamic include-paths-set !64
      end

      // Add the standard library.
      2 argv array64.get include-paths-set str-set8.add drop

      argc 4 = if
        3 argv array64.get cstr.to-dynamic-termed
        "output.asm" inc to-dynamic8
        include-paths-set
        STDERR compile-nasm

      else argc 5 = if  
        3 argv array64.get cstr.to-dynamic-termed
        4 argv array64.get cstr.to-dynamic-termed
        include-paths-set
        STDERR compile-nasm

      else
        use-info-compile-nasm
      end end

      // Deallocate 'include-paths-set'.
      include-paths-set list64.mfree drop
    end
    
  else 1 argv array64.get "compile" drop cstr.cmp is-zero if
    not-implemented
  else 1 argv array64.get "compile-corth" drop cstr.cmp is-zero if
    not-implemented
  else 1 argv array64.get "run" drop cstr.cmp is-zero if
    not-implemented
  else 1 argv array64.get "quick-test" drop cstr.cmp is-zero if
    not-implemented
  else
    use-info-basic
  end end end end end
end EXIT-SUCCESS end
