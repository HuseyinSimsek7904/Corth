include core/stack.corth

/*

  This library includes some algorithms that can be used for sorted arrays.

*/

proc sorted64.available
  // int: value ptr: start ptr: end -> ptr: lower-bound bool: found
  int ptr ptr -> ptr bool
  // Finds where the value could be placed using binary search, so that the array could stay sorted.
  // Returns if the value was found in the array.
in
  memory lower sizeof(ptr) in
  memory upper sizeof(ptr) in

    upper !64
    lower !64

    lower @64 8 % let value offset in
      while true do
        // Check if failed to find the value, if so, return false.
        lower @64 upper @64 = if
          lower @64 false return
        end

        lower @64 upper @64 avg2 offset - 8 lower-base offset + let middle in
          // Check if found the exact value, if so, return true.
          middle @64 value = if
            middle true return
          end

          // Move the end search points.
          middle @64 value < if
            middle 8 + lower !64
          else
            middle upper !64
          end
        end
      end
    end
  end end
NULLPTR false end  // dummy return
