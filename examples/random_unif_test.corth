include "linux_x86/stdio.corth"
include "math/fixed64.corth"
include "math/random.corth"
include "core/stack.corth"


macro numbers 30 endmacro
macro tries   10000000 endmacro


proc main
  int int -> int
in let argc argv in
  NULLPTR time rng-seed !64

  "Generating " puts numbers tries u* putu " random numbers between 0 and " puts numbers putu "...\n" puts
  memory array 240 in
    0 while dup numbers < do
      let i in
        0 i 8 * array + !64
      i end
    inc end drop

    numbers tries u* while dup isn-zero do
      numbers rand-unif 8 * array + let address in
        address @64 inc address !64
      end
    dec end drop

    "Done, results: \n" puts

    0 while dup numbers < do
      let i in
        i putu ": " puts i 8 * array + @64 putu putnl
      i end
    inc end drop

  end
end 0 end
