include "linux_x86/sys.corth"
include "linux_x86/stdio.corth"

proc main
  int int -> int
in let argc argv in
  fork let pid in
    pid -1 = if
      "error: could not fork child\n" puts
      1 exit drop

    else pid 0 = if
      // Give the arguments of the program to the sub process.
      argv 8 + let new-argv in
        memory new-envp 8 in
          // new-envp[0] = NULL;
          NULLPTR new-envp !64

          // Run the sub process.
          new-argv @64 new-argv new-envp execve drop
          "error: could not execute subprocess\n" puts
          1 exit drop
        end
      end

    else
      memory infop sizeof(siginfo_t) in
        P_PID pid infop WEXITED NULLPTR waitid drop
        "info: parent ended\n" puts

        infop 8 + @32 CLD_EXITED = if
          infop 24 + @32 let exit-code in
            "info: child exited with code " puts exit-code puti putnl
            exit-code exit drop
          end

        else
          "info: unknown exit code\n" puts
          1 exit drop
        end
      end
    end end
  end
end 0 end
